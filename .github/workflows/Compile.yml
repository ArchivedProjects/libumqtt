name: Compile Library and Example Program

on:
  push:
    branches:
      - release
      - master

# OSX
# brew install lua libev
# cmake ..
# CPATH=/usr/local/include/:$CPATH make

jobs:
  build-osx:
    name: Build Library and Tests (OSX)
    runs-on: macOS-latest # There's also windows-latest, ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install Homebrew (OSX)
      if: startsWith(runner.os, 'macOS')
      run: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null

    # This is to avoid mucking up the Homebrew Team's Analytic Data
    - name: Disable Homebrew Analytics (OSX)
      if: startsWith(runner.os, 'macOS')
      run: brew analytics off

    - name: Install Libraries (OSX)
      if: startsWith(runner.os, 'macOS')
      run: brew install lua libev openssl netcat

    - name: Initialize Submodules
      run: git submodule update --init --recursive

    - name: Create Build Directory (OSX)
      if: startsWith(runner.os, 'macOS')
      run: mkdir -p build

    - name: Configure With CMake (OSX)
      working-directory: ./build
      if: startsWith(runner.os, 'macOS')
      run: cmake ..

    - name: Make Library and Test Programs (OSX)
      working-directory: ./build
      if: startsWith(runner.os, 'macOS')
      run: make
      env:
        CPATH: /usr/local/include/
        LDFLAGS: -L/usr/local/opt/openssl/lib
        CPPFLAGS: -I/usr/local/opt/openssl/include

    # Github Does Not Block Port 8883 On Outgoing TCP Connections At All
    # - name: Test Netcat (OSX)
    #   working-directory: ./build/tests/
    #   if: startsWith(runner.os, 'macOS')
    #   run: cat ./github | nc ${{ secrets.mqtt_hostname }} 8883
    #   env:
    #     mqtt_username: "Fake Username"
    #     mqtt_password: "Fake Password"

    - name: Run Tests Help Text (OSX)
      working-directory: ./build/tests/
      if: startsWith(runner.os, 'macOS')
      run: ./github -z

    - name: Run Tests (OSX)
      working-directory: ./build/tests/
      if: startsWith(runner.os, 'macOS')
      run: mqtt_username="${{ secrets.mqtt_username }}" mqtt_password="${{ secrets.mqtt_password_semiescaped }}" ./github -d -s -h ${{ secrets.mqtt_hostname }} -p 8883

  build-linux:
    runs-on: ubuntu-latest
    name: Build Library and Tests (Linux)

    steps:
    - uses: actions/checkout@v1

    - name: Download Required Packages
      run: sudo apt-get install libev-dev libssl-dev liblua5.2-dev

    - name: Initialize Submodules
      run: git submodule update --init --recursive

    - name: Create Build Directory
      run: mkdir build

    - name: Log Current Working Directory
      working-directory: ./build
      run: pwd

    - name: List Parent Directory's Contents
      working-directory: ./build
      run: ls -liallh ..

    - name: configure
      working-directory: ./build
      run: cmake ..

    - name: make
      working-directory: ./build
      run: make

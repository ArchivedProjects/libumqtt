name: Compile Library and Example Program

on:
  push:
    branches:
      - release
      - master

# OSX
# brew install lua libev
# cmake ..
# CPATH=/usr/local/include/:$CPATH make

jobs:
  build-osx:
    name: Build Library and Tests
    runs-on: macOS-latest # There's also windows-latest, ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install Homebrew (OSX)
      if: startsWith(runner.os, 'macOS')
      run: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null

    # This is to avoid mucking up the Homebrew Team's Analytic Data
    - name: Disable Homebrew Analytics (OSX)
      if: startsWith(runner.os, 'macOS')
      run: brew analytics off

    - name: Install Libraries (OSX)
      if: startsWith(runner.os, 'macOS')
      run: brew install lua libev

    - name: Create Build Directory (OSX)
      if: startsWith(runner.os, 'macOS')
      run: mkdir -p build

    - name: Configure With CMake (OSX)
      working-directory: ./build
      if: startsWith(runner.os, 'macOS')
      run: cmake ..

    - name: Make Library and Test Programs (OSX)
      working-directory: ./build
      if: startsWith(runner.os, 'macOS')
      run: CPATH=/usr/local/include/:$CPATH make

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Download Required Packages
      run: sudo apt install libev-dev libssl-dev liblua5.2-dev

    - name: Initialize Submodules
      run: git submodule update --init --recursive

    - name: Create Build Directory
      run: mkdir build

    - name: Log Current Working Directory
      working-directory: ./build
      run: pwd

    - name: List Parent Directory's Contents
      working-directory: ./build
      run: ls -liallh ..

    - name: configure
      working-directory: ./build
      run: cmake ..

    - name: make
      working-directory: ./build
      run: make
